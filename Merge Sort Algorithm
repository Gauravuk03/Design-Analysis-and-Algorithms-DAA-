#include <bits/stdc++.h>
using namespace std;

// Merge two sorted halves
void merge(vector<int>& arr, int left, int mid, int right) {
    int i = left, j = mid + 1, k = 0;
    vector<int> temp(right - left + 1);

    while (i <= mid && j <= right) {
        if (arr[i] <= arr[j]) {
            temp[k++] = arr[i++];
        } else {
            temp[k++] = arr[j++];
        }
    }

    while (i <= mid) {
        temp[k++] = arr[i++];
    }
    while (j <= right) {
        temp[k++] = arr[j++];
    }

    // Copy sorted elements back to original array
    for (int t = 0; t < temp.size(); t++) {
        arr[left + t] = temp[t];
    }
}

// Merge Sort function
void mergesort(vector<int>& arr, int left, int right) {
    if (left >= right) return; // Base case

    int mid = left + (right - left) / 2; // Correct mid calculation

    mergesort(arr, left, mid);
    mergesort(arr, mid + 1, right);

    merge(arr, left, mid, right);
}

int main() {
    int n;
    cin >> n;
    vector<int> arr(n);

    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    mergesort(arr, 0, n - 1);

    cout << "After merge sort:";
    for (int i = 0; i < n; i++) {
        cout << " " << arr[i];
    }

    return 0;
}
